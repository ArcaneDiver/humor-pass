name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  deps:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version: 14
          cache: yarn

      - name: Install dependencies
        run: yarn

      - name: Upload Node Modules as artifacts
        uses: actions/upload-artifact@master
        with:
          name: node-modules
          path: node_modules

  agents:
    needs: deps
    runs-on: ubuntu-latest
    name: Agents
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version: 14
          cache: yarn

      - name: Download node_modules
        uses: actions/download-artifact@master
        with:
          name: node-modules
          path: node_modules

      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent

  build:
    needs: deps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version: 14
          cache: yarn

      - name: Download node_modules
        uses: actions/download-artifact@master
        with:
          name: node-modules
          path: node_modules

      - name: Start agents
        run: yarn nx-cloud start-ci-run

      - name: Build projects
        run: yarn nx run-many --target=build --all=true --parallel=true

      - name: Upload dist artifacts
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist

      - name: Stop all agents
        run: yarn nx-cloud stop-all-agents

  deploy-docs:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download dist folder
        uses: actions/download-artifact@master
        with:
          name: dist
          path: dist

      - name: Deploy to pinata
        run: yarn dlx ipfs-deploy dist/apps/docs -p pinata -d cloudflare
        env:
          IPFS_DEPLOY_CLOUDFLARE__API_TOKEN: ${{ secrets.IPFS_DEPLOY_CLOUDFLARE__API_TOKEN }}
          IPFS_DEPLOY_CLOUDFLARE__ZONE: ${{ secrets.IPFS_DEPLOY_CLOUDFLARE__ZONE }}
          IPFS_DEPLOY_CLOUDFLARE__RECORD: '_dnslink.docs.humor-pass.mdellamea.it'
          IPFS_DEPLOY_PINATA__API_KEY: ${{ secrets.IPFS_DEPLOY_PINATA__API_KEY }}
          IPFS_DEPLOY_PINATA__SECRET_API_KEY: ${{ secrets.IPFS_DEPLOY_PINATA__SECRET_API_KEY }}
  if-fails:
    needs: [deps, build]
    if: always() && (needs.build.result == 'failure')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version: 14
          cache: yarn

      - name: Stop all agents
        run: yarn nx-cloud stop-all-agents
